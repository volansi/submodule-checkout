name: 'Reliable Recursive Submodule Checkout'
description: 'Checkout With Submodules (Recursive) Using PAT. MUST be used with actions/checkout@v1'
inputs:
  token:
    description: 'A single Personal Access Token (PAT) which can be used to recursively clone _all_ submodules'
    required: true
outputs:
  branch:
    description: "Branch Name"
    value: ${{ steps.vars.outputs.branch }}
  branch_clean:
    description: "Branch name cleaned of any '/'"
    value: ${{ steps.vars.outputs.branch_clean }}
  sha_short:
    description: "Short SHA Commit Hash Value"
    value: ${{ steps.vars.outputs.sha_short }}

runs:
  using: "composite"
  steps:
    - name: "Where am I?"
      run: pwd && ls -alh
      shell: bash

    - name: Checkout Code (No Submodules)
      uses: actions/checkout@50fbc622fc4ef5163becd7fab6573eac35f8462e
      
    - name: Copy recurse-submodules script
      run: cp $GITHUB_ACTION_PATH/recurse-submodules.sh .
      shell: bash

    - name: "Where am I now?"
      run: pwd && ls -alh
      shell: bash

    - name: Checkout submodules using PAT
      run: $GITHUB_ACTION_PATH/recurse-submodules.sh ${{ inputs.token }} $GITHUB_ACTION_PATH
      shell: bash

    - name: Setup Variables
      # Courtesy of: https://github.com/TiagoGouvea/github-actions-test/actions/runs/100049392/workflow
      id: vars
      run: |
        echo "GITHUB_SHA = ${GITHUB_SHA}"
        echo "GITHUB_REF = ${GITHUB_REF}"
        echo "BRANCH = ${GITHUB_REF#refs/heads/}"
        echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=branch_clean::$(echo ${GITHUB_REF#refs/heads/} | sed 's.\/.\_.g')"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
        echo ::set-output name=GIT_TAG::$(git describe --tags --abbrev=0)"
        echo "SOURCE_TAG = ${GITHUB_REF#refs/tags/}"
        echo "SOURCE_NAME = ${GITHUB_REF#refs/*/}"
      env:
        SOURCE_NAME: ${{ steps.vars.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.vars.outputs.branch_clean }}
        SOURCE_TAG: ${{ steps.vars.outputs.SOURCE_TAG }}
        GIT_TAG: ${{ steps.vars.outputs.GIT_TAG }}
      shell: bash
